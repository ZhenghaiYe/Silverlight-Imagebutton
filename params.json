{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA-35057636-1","body":"Silverlight-Imagebutton\r\n=======================\r\n\r\nI was a little taken aback by how complicated simple things could be in Silverlight. One of these _things_ was a simple image button that changes image when you press it.\r\n\r\nSo, here is my implementation - A simple imagebutton control for Silverlight 5 applications\r\n\r\nThe solution is in VS2012 format, but you could easily take the components and re-build it in any version, it's simple enough.\r\n\r\nNote: This worked for me, you may have to make some changes. If you make improvements, just let me know :)\r\n\r\nComponents\r\n==========\r\n\r\n_Controls/ImageButton.cs_\r\nThe main control code, this is what you add to your XAML templates.\r\n\r\n_Themes/Generic.xaml_\r\nEvery custom control must have a default template and this is where it has to live.\r\n\r\n_Resources/Image.resx_\r\nI normally store all my SL assets in resource files, this is a sample resource file with a couple of graphics - one for an on state button, one for an off. The images are also included in the Resources/Images folder.\r\n\r\nUsage\r\n=====\r\n\r\nOnce all the components are in place you can use it like so:\r\n\r\nAdd your namespace to your XAML header:\r\n\r\n    xmlns:Controls=\"clr-namespace:SilverlightImageButton.Controls\"\r\n\r\nAdd the control to your UI:\r\n\t\r\n    <Controls:ImageButton x:Name=\"MyButton\" />\r\n\r\nAnd in the code behind you set the Off and On images like so:\r\n\r\n    MyButton.OffImageSource = SilverlightImageButton.Resources.Images.LangEn_off;\r\n    MyButton.OnImageSource = SilverlightImageButton.Resources.Images.LangEn_on;\r\n\r\nIf anyone can figure out how to set these properties from the .XAML, I'd be happy to hear from you :)","name":"Silverlight-imagebutton","tagline":"A simple imagebutton control for Silverlight 5 applications"}